{"version":3,"file":"lit-extended.js","sourceRoot":"","sources":["../src/lib/lit-extended.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright (c) 2017 The Polymer Project Authors. All rights reserved.\n * This code may only be used under the BSD style license found at\n * http://polymer.github.io/LICENSE.txt\n * The complete set of authors may be found at\n * http://polymer.github.io/AUTHORS.txt\n * The complete set of contributors may be found at\n * http://polymer.github.io/CONTRIBUTORS.txt\n * Code distributed by Google as part of the polymer project is also\n * subject to an additional IP rights grant found at\n * http://polymer.github.io/PATENTS.txt\n */\n\nimport {AttributePart, defaultPartCallback, directiveValue, getValue, Part, SVGTemplateResult, TemplateInstance, TemplatePart, TemplateResult} from '../lit-html.js';\n\nexport {render} from '../lit-html.js';\n\n/**\n * Interprets a template literal as a lit-extended HTML template.\n */\nexport const html = (strings: TemplateStringsArray, ...values: any[]) =>\n    new TemplateResult(strings, values, 'html', extendedPartCallback);\n\n/**\n * Interprets a template literal as a lit-extended SVG template.\n */\nexport const svg = (strings: TemplateStringsArray, ...values: any[]) =>\n    new SVGTemplateResult(strings, values, 'svg', extendedPartCallback);\n\n/**\n * A PartCallback which allows templates to set properties and declarative\n * event handlers.\n *\n * Properties are set by default, instead of attributes. Attribute names in\n * lit-html templates preserve case, so properties are case sensitive. If an\n * expression takes up an entire attribute value, then the property is set to\n * that value. If an expression is interpolated with a string or other\n * expressions then the property is set to the string result of the\n * interpolation.\n *\n * To set an attribute instead of a property, append a `$` suffix to the\n * attribute name.\n *\n * Example:\n *\n *     html`<button class$=\"primary\">Buy Now</button>`\n *\n * To set an event handler, prefix the attribute name with `on-`:\n *\n * Example:\n *\n *     html`<button on-click=${(e)=> this.onClickHandler(e)}>Buy Now</button>`\n *\n */\nexport const extendedPartCallback =\n    (instance: TemplateInstance, templatePart: TemplatePart, node: Node):\n        Part => {\n          if (templatePart.type === 'attribute') {\n            if (templatePart.rawName!.startsWith('on-')) {\n              const eventName = templatePart.rawName!.slice(3);\n              return new EventPart(instance, node as Element, eventName);\n            }\n            if (templatePart.name!.endsWith('$')) {\n              const name = templatePart.name!.slice(0, -1);\n              return new AttributePart(\n                  instance, node as Element, name, templatePart.strings!);\n            }\n            if (templatePart.name!.endsWith('?')) {\n              const name = templatePart.name!.slice(0, -1);\n              return new BooleanAttributePart(\n                  instance, node as Element, name, templatePart.strings!);\n            }\n            return new PropertyPart(\n                instance,\n                node as Element,\n                templatePart.rawName!,\n                templatePart.strings!);\n          }\n          return defaultPartCallback(instance, templatePart, node);\n        };\n\n/**\n * Implements a boolean attribute, roughly as defined in the HTML\n * specification.\n *\n * If the value is truthy, then the attribute is present with a value of\n * ''. If the value is falsey, the attribute is removed.\n */\nexport class BooleanAttributePart extends AttributePart {\n  setValue(values: any[], startIndex: number): void {\n    const s = this.strings;\n    if (s.length === 2 && s[0] === '' && s[1] === '') {\n      const value = getValue(this, values[startIndex]);\n      if (value === directiveValue) {\n        return;\n      }\n      if (value) {\n        this.element.setAttribute(this.name, '');\n      } else {\n        this.element.removeAttribute(this.name);\n      }\n    } else {\n      throw new Error(\n          'boolean attributes can only contain a single expression');\n    }\n  }\n}\n\nexport class PropertyPart extends AttributePart {\n  setValue(values: any[], startIndex: number): void {\n    const s = this.strings;\n    let value: any;\n    if (this._equalToPreviousValues(values, startIndex)) {\n      return;\n    }\n    if (s.length === 2 && s[0] === '' && s[1] === '') {\n      // An expression that occupies the whole attribute value will leave\n      // leading and trailing empty strings.\n      value = getValue(this, values[startIndex]);\n    } else {\n      // Interpolation, so interpolate\n      value = this._interpolate(values, startIndex);\n    }\n    if (value !== directiveValue) {\n      (this.element as any)[this.name] = value;\n    }\n\n    this._previousValues = values;\n  }\n}\n\nexport class EventPart implements Part {\n  instance: TemplateInstance;\n  element: Element;\n  eventName: string;\n  private _listener: any;\n\n  constructor(instance: TemplateInstance, element: Element, eventName: string) {\n    this.instance = instance;\n    this.element = element;\n    this.eventName = eventName;\n  }\n\n  setValue(value: any): void {\n    const listener = getValue(this, value);\n    const previous = this._listener;\n    if (listener === previous) {\n      return;\n    }\n\n    this._listener = listener;\n    if (previous != null) {\n      this.element.removeEventListener(this.eventName, previous);\n    }\n    if (listener != null) {\n      this.element.addEventListener(this.eventName, listener);\n    }\n  }\n}\n"]}